// <auto-generated />
using System;
using Addressbook.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Addressbook.data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190808182844_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Addressbook.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine")
                        .HasMaxLength(255);

                    b.Property<string>("City")
                        .HasMaxLength(30);

                    b.Property<int?>("ContactId");

                    b.Property<string>("Country")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10);

                    b.Property<DateTime>("UpdateDateTime");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine = "2 Warner Drive",
                            City = "Portland",
                            ContactId = 2,
                            Country = "United States",
                            CreateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 106, DateTimeKind.Local).AddTicks(4548),
                            Name = "Home",
                            PostalCode = "97240",
                            UpdateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 106, DateTimeKind.Local).AddTicks(4554)
                        },
                        new
                        {
                            Id = 2,
                            AddressLine = "17936 East Plaza",
                            City = "Bertioga",
                            ContactId = 2,
                            Country = "Brazil",
                            CreateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 106, DateTimeKind.Local).AddTicks(5681),
                            Name = "Office",
                            PostalCode = "11250-000",
                            UpdateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 106, DateTimeKind.Local).AddTicks(5683)
                        });
                });

            modelBuilder.Entity("Addressbook.Data.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("ContactType");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20);

                    b.Property<DateTime>("UpdateDateTime");

                    b.Property<string>("WebAddress")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactType = (byte)1,
                            CreateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 102, DateTimeKind.Local).AddTicks(8728),
                            Email = "yusufsezer@mail.com",
                            FirstName = "Yusuf",
                            IsDeleted = false,
                            LastName = "SEZER",
                            Notes = "N/A",
                            PhoneNumber = "+90 538 693 4533",
                            UpdateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 103, DateTimeKind.Local).AddTicks(5070),
                            WebAddress = "www.yusufsezer.com"
                        },
                        new
                        {
                            Id = 2,
                            ContactType = (byte)0,
                            CreateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 103, DateTimeKind.Local).AddTicks(7235),
                            Email = "dashlee0@home.pl",
                            FirstName = "Davida",
                            IsDeleted = false,
                            LastName = "Ashlee",
                            Notes = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus. Praesent lectus.",
                            PhoneNumber = "+62 178 449 0264",
                            UpdateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 103, DateTimeKind.Local).AddTicks(7238),
                            WebAddress = "globo.com"
                        },
                        new
                        {
                            Id = 3,
                            ContactType = (byte)2,
                            CreateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 103, DateTimeKind.Local).AddTicks(7266),
                            Email = "tpache0@reddit.com",
                            FirstName = "Tedra",
                            IsDeleted = false,
                            LastName = "Pache",
                            Notes = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus. Praesent lectus.",
                            PhoneNumber = "+48 262 407 5395",
                            UpdateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 103, DateTimeKind.Local).AddTicks(7267),
                            WebAddress = "abc.net.au"
                        },
                        new
                        {
                            Id = 4,
                            ContactType = (byte)3,
                            CreateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 103, DateTimeKind.Local).AddTicks(7268),
                            Email = "gtaplin3@gizmodo.com",
                            FirstName = "Gwenny",
                            IsDeleted = false,
                            LastName = "Taplin",
                            Notes = "Curabitur gravida nisi at nibh. In hac habitasse platea dictumst. Aliquam augue quam, sollicitudin vitae, consectetuer eget, rutrum at, lorem.",
                            PhoneNumber = "+86 583 783 5850",
                            UpdateDateTime = new DateTime(2019, 8, 8, 21, 28, 44, 103, DateTimeKind.Local).AddTicks(7269),
                            WebAddress = "japanpost.jp"
                        });
                });

            modelBuilder.Entity("Addressbook.Data.Models.Address", b =>
                {
                    b.HasOne("Addressbook.Data.Models.Contact", "Contact")
                        .WithMany("Addresses")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
